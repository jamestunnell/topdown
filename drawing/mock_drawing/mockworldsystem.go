// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jamestunnell/topdown/drawing (interfaces: WorldSystem)

// Package mock_drawing is a generated GoMock package.
package mock_drawing

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ebiten "github.com/hajimehoshi/ebiten/v2"
	topdown "github.com/jamestunnell/topdown"
)

// MockWorldSystem is a mock of WorldSystem interface.
type MockWorldSystem struct {
	ctrl     *gomock.Controller
	recorder *MockWorldSystemMockRecorder
}

// MockWorldSystemMockRecorder is the mock recorder for MockWorldSystem.
type MockWorldSystemMockRecorder struct {
	mock *MockWorldSystem
}

// NewMockWorldSystem creates a new mock instance.
func NewMockWorldSystem(ctrl *gomock.Controller) *MockWorldSystem {
	mock := &MockWorldSystem{ctrl: ctrl}
	mock.recorder = &MockWorldSystemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorldSystem) EXPECT() *MockWorldSystemMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockWorldSystem) Add(arg0 string, arg1 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0, arg1)
}

// Add indicates an expected call of Add.
func (mr *MockWorldSystemMockRecorder) Add(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockWorldSystem)(nil).Add), arg0, arg1)
}

// Clear mocks base method.
func (m *MockWorldSystem) Clear() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Clear")
}

// Clear indicates an expected call of Clear.
func (mr *MockWorldSystemMockRecorder) Clear() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clear", reflect.TypeOf((*MockWorldSystem)(nil).Clear))
}

// DrawWorld mocks base method.
func (m *MockWorldSystem) DrawWorld(arg0 topdown.Rectangle[float64]) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DrawWorld", arg0)
}

// DrawWorld indicates an expected call of DrawWorld.
func (mr *MockWorldSystemMockRecorder) DrawWorld(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DrawWorld", reflect.TypeOf((*MockWorldSystem)(nil).DrawWorld), arg0)
}

// Remove mocks base method.
func (m *MockWorldSystem) Remove(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Remove", arg0)
}

// Remove indicates an expected call of Remove.
func (mr *MockWorldSystemMockRecorder) Remove(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockWorldSystem)(nil).Remove), arg0)
}

// Surface mocks base method.
func (m *MockWorldSystem) Surface() *ebiten.Image {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Surface")
	ret0, _ := ret[0].(*ebiten.Image)
	return ret0
}

// Surface indicates an expected call of Surface.
func (mr *MockWorldSystemMockRecorder) Surface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Surface", reflect.TypeOf((*MockWorldSystem)(nil).Surface))
}
