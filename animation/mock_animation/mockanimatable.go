// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jamestunnell/topdown/animation (interfaces: Animatable)

// Package mock_animation is a generated GoMock package.
package mock_animation

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockAnimatable is a mock of Animatable interface.
type MockAnimatable struct {
	ctrl     *gomock.Controller
	recorder *MockAnimatableMockRecorder
}

// MockAnimatableMockRecorder is the mock recorder for MockAnimatable.
type MockAnimatableMockRecorder struct {
	mock *MockAnimatable
}

// NewMockAnimatable creates a new mock instance.
func NewMockAnimatable(ctrl *gomock.Controller) *MockAnimatable {
	mock := &MockAnimatable{ctrl: ctrl}
	mock.recorder = &MockAnimatableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnimatable) EXPECT() *MockAnimatableMockRecorder {
	return m.recorder
}

// UpdateAnimation mocks base method.
func (m *MockAnimatable) UpdateAnimation(arg0 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateAnimation", arg0)
}

// UpdateAnimation indicates an expected call of UpdateAnimation.
func (mr *MockAnimatableMockRecorder) UpdateAnimation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAnimation", reflect.TypeOf((*MockAnimatable)(nil).UpdateAnimation), arg0)
}
